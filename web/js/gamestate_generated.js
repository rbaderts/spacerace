// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var messages = messages || {};

/**
 * @enum
 */
messages.ForceType = {
  NoForceType: 0,
  ThrustForce: 1,
  CollisionForce: 2,
  Gravitation: 3,
  InitialForce: 4
};

/**
 * @enum
 */
messages.SpriteKind = {
  NoSpriteType: 0,
  Ship: 65536,
  LargeAsteroid: 131072,
  SmallAsteroid: 196608,
  Bullet: 262144,
  Blackhole: 327680,
  Star: 393216,
  Prize: 458752,
  Planet: 524288,
  SpaceStation: 589824,
  EndToken: 655360,
  AiShip: 720896
};

/**
 * @enum
 */
messages.SoundType = {
  NoSoundType: 0,
  ExplosionSound: 1,
  BoingSound: 2,
  BloopSound: 3
};

/**
 * @enum
 */
messages.SpriteStatus = {
  NoSpriteStatus: 0,
  ShieldActive: 1,
  JetsOn: 2,
  PhantomMode: 3
};

/**
 * @enum
 */
messages.PlayerResourceType = {
  NoPlayerResourceType: 0,
  Life: 256,
  Shield: 512,
  Hyperdrive: 768,
  Booster: 1024,
  Cloak: 1280,
  Tractor: 1536,
  RailGun: 1792
};

/**
 * @enum
 */
messages.UpdateMessage = {
  NONE: 0,
  PlayerUpdate: 1,
  PhysicsUpdate: 2,
  InitializePlayer: 3,
  PlaySound: 4,
  Draw: 5,
  Shake: 6,
  PlayerDead: 7
};

/**
 * @constructor
 */
messages.SpriteState = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.SpriteState}
 */
messages.SpriteState.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.SpriteState=} obj
 * @returns {messages.SpriteState}
 */
messages.SpriteState.getRootAsSpriteState = function(bb, obj) {
  return (obj || new messages.SpriteState).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.typ = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.x = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.y = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.vx = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.vy = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.height = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.width = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.rotation = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.mass = function() {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.healthpoints = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteState.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
messages.SpriteState.prototype.playerName = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.SpriteState.startSpriteState = function(builder) {
  builder.startObject(13);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
messages.SpriteState.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} typ
 */
messages.SpriteState.addTyp = function(builder, typ) {
  builder.addFieldInt32(1, typ, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 */
messages.SpriteState.addX = function(builder, x) {
  builder.addFieldFloat64(2, x, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} y
 */
messages.SpriteState.addY = function(builder, y) {
  builder.addFieldFloat64(3, y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} vx
 */
messages.SpriteState.addVx = function(builder, vx) {
  builder.addFieldFloat64(4, vx, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} vy
 */
messages.SpriteState.addVy = function(builder, vy) {
  builder.addFieldFloat64(5, vy, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} height
 */
messages.SpriteState.addHeight = function(builder, height) {
  builder.addFieldInt32(6, height, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} width
 */
messages.SpriteState.addWidth = function(builder, width) {
  builder.addFieldInt32(7, width, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rotation
 */
messages.SpriteState.addRotation = function(builder, rotation) {
  builder.addFieldFloat64(8, rotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} mass
 */
messages.SpriteState.addMass = function(builder, mass) {
  builder.addFieldFloat64(9, mass, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} healthpoints
 */
messages.SpriteState.addHealthpoints = function(builder, healthpoints) {
  builder.addFieldInt32(10, healthpoints, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
messages.SpriteState.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(11, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playerNameOffset
 */
messages.SpriteState.addPlayerName = function(builder, playerNameOffset) {
  builder.addFieldOffset(12, playerNameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.SpriteState.endSpriteState = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.SpriteStateUpdate = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.SpriteStateUpdate}
 */
messages.SpriteStateUpdate.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.SpriteStateUpdate=} obj
 * @returns {messages.SpriteStateUpdate}
 */
messages.SpriteStateUpdate.getRootAsSpriteStateUpdate = function(bb, obj) {
  return (obj || new messages.SpriteStateUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.typ = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.x = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.y = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.vx = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.vy = function() {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.rotation = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.healthpoints = function() {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.SpriteStateUpdate.prototype.yank = function() {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? this.bb.readInt8(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.SpriteStateUpdate.startSpriteStateUpdate = function(builder) {
  builder.startObject(9);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
messages.SpriteStateUpdate.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} typ
 */
messages.SpriteStateUpdate.addTyp = function(builder, typ) {
  builder.addFieldInt32(1, typ, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} x
 */
messages.SpriteStateUpdate.addX = function(builder, x) {
  builder.addFieldFloat64(2, x, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} y
 */
messages.SpriteStateUpdate.addY = function(builder, y) {
  builder.addFieldFloat64(3, y, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} vx
 */
messages.SpriteStateUpdate.addVx = function(builder, vx) {
  builder.addFieldFloat64(4, vx, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} vy
 */
messages.SpriteStateUpdate.addVy = function(builder, vy) {
  builder.addFieldFloat64(5, vy, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} rotation
 */
messages.SpriteStateUpdate.addRotation = function(builder, rotation) {
  builder.addFieldFloat64(6, rotation, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} healthpoints
 */
messages.SpriteStateUpdate.addHealthpoints = function(builder, healthpoints) {
  builder.addFieldInt32(7, healthpoints, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} yank
 */
messages.SpriteStateUpdate.addYank = function(builder, yank) {
  builder.addFieldInt8(8, yank, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.SpriteStateUpdate.endSpriteStateUpdate = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.PhysicsUpdate = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.PhysicsUpdate}
 */
messages.PhysicsUpdate.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.PhysicsUpdate=} obj
 * @returns {messages.PhysicsUpdate}
 */
messages.PhysicsUpdate.getRootAsPhysicsUpdate = function(bb, obj) {
  return (obj || new messages.PhysicsUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
messages.PhysicsUpdate.prototype.timeNanos = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
messages.PhysicsUpdate.prototype.frame = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
messages.PhysicsUpdate.prototype.frameTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @returns {number}
 */
messages.PhysicsUpdate.prototype.actionId = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {messages.SpriteState=} obj
 * @returns {messages.SpriteState}
 */
messages.PhysicsUpdate.prototype.sprites = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new messages.SpriteState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
messages.PhysicsUpdate.prototype.spritesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.PhysicsUpdate.startPhysicsUpdate = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timeNanos
 */
messages.PhysicsUpdate.addTimeNanos = function(builder, timeNanos) {
  builder.addFieldInt64(0, timeNanos, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} frame
 */
messages.PhysicsUpdate.addFrame = function(builder, frame) {
  builder.addFieldInt32(1, frame, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} frameTime
 */
messages.PhysicsUpdate.addFrameTime = function(builder, frameTime) {
  builder.addFieldInt64(2, frameTime, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} actionId
 */
messages.PhysicsUpdate.addActionId = function(builder, actionId) {
  builder.addFieldInt32(3, actionId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} spritesOffset
 */
messages.PhysicsUpdate.addSprites = function(builder, spritesOffset) {
  builder.addFieldOffset(4, spritesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
messages.PhysicsUpdate.createSpritesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
messages.PhysicsUpdate.startSpritesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.PhysicsUpdate.endPhysicsUpdate = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.InitializePlayer = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.InitializePlayer}
 */
messages.InitializePlayer.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.InitializePlayer=} obj
 * @returns {messages.InitializePlayer}
 */
messages.InitializePlayer.getRootAsInitializePlayer = function(bb, obj) {
  return (obj || new messages.InitializePlayer).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
messages.InitializePlayer.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.InitializePlayer.prototype.shipId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.InitializePlayer.startInitializePlayer = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
messages.InitializePlayer.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} shipId
 */
messages.InitializePlayer.addShipId = function(builder, shipId) {
  builder.addFieldInt32(1, shipId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.InitializePlayer.endInitializePlayer = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.Inventory = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.Inventory}
 */
messages.Inventory.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.Inventory=} obj
 * @returns {messages.Inventory}
 */
messages.Inventory.getRootAsInventory = function(bb, obj) {
  return (obj || new messages.Inventory).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {messages.PlayerResourceType}
 */
messages.Inventory.prototype.resourceType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {messages.PlayerResourceType} */ (this.bb.readUint32(this.bb_pos + offset)) : messages.PlayerResourceType.NoPlayerResourceType;
};

/**
 * @returns {number}
 */
messages.Inventory.prototype.value = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.Inventory.startInventory = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {messages.PlayerResourceType} resourceType
 */
messages.Inventory.addResourceType = function(builder, resourceType) {
  builder.addFieldInt32(0, resourceType, messages.PlayerResourceType.NoPlayerResourceType);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} value
 */
messages.Inventory.addValue = function(builder, value) {
  builder.addFieldInt32(1, value, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.Inventory.endInventory = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.PlayerUpdate = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.PlayerUpdate}
 */
messages.PlayerUpdate.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.PlayerUpdate=} obj
 * @returns {messages.PlayerUpdate}
 */
messages.PlayerUpdate.getRootAsPlayerUpdate = function(bb, obj) {
  return (obj || new messages.PlayerUpdate).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
messages.PlayerUpdate.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
messages.PlayerUpdate.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
messages.PlayerUpdate.prototype.shipId = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {messages.Inventory=} obj
 * @returns {messages.Inventory}
 */
messages.PlayerUpdate.prototype.inventory = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new messages.Inventory).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
messages.PlayerUpdate.prototype.inventoryLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.PlayerUpdate.startPlayerUpdate = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
messages.PlayerUpdate.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
messages.PlayerUpdate.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} shipId
 */
messages.PlayerUpdate.addShipId = function(builder, shipId) {
  builder.addFieldInt32(2, shipId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} inventoryOffset
 */
messages.PlayerUpdate.addInventory = function(builder, inventoryOffset) {
  builder.addFieldOffset(3, inventoryOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
messages.PlayerUpdate.createInventoryVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
messages.PlayerUpdate.startInventoryVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.PlayerUpdate.endPlayerUpdate = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.PlaySound = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.PlaySound}
 */
messages.PlaySound.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.PlaySound=} obj
 * @returns {messages.PlaySound}
 */
messages.PlaySound.getRootAsPlaySound = function(bb, obj) {
  return (obj || new messages.PlaySound).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {messages.SoundType}
 */
messages.PlaySound.prototype.soundType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {messages.SoundType} */ (this.bb.readInt8(this.bb_pos + offset)) : messages.SoundType.NoSoundType;
};

/**
 * @returns {number}
 */
messages.PlaySound.prototype.volume = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.PlaySound.startPlaySound = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {messages.SoundType} soundType
 */
messages.PlaySound.addSoundType = function(builder, soundType) {
  builder.addFieldInt8(0, soundType, messages.SoundType.NoSoundType);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} volume
 */
messages.PlaySound.addVolume = function(builder, volume) {
  builder.addFieldFloat64(1, volume, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.PlaySound.endPlaySound = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.Draw = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.Draw}
 */
messages.Draw.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.Draw=} obj
 * @returns {messages.Draw}
 */
messages.Draw.getRootAsDraw = function(bb, obj) {
  return (obj || new messages.Draw).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
messages.Draw.prototype.cmds = function(index, optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
messages.Draw.prototype.cmdsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.Draw.startDraw = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cmdsOffset
 */
messages.Draw.addCmds = function(builder, cmdsOffset) {
  builder.addFieldOffset(0, cmdsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
messages.Draw.createCmdsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
messages.Draw.startCmdsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.Draw.endDraw = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.PlayerDead = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.PlayerDead}
 */
messages.PlayerDead.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.PlayerDead=} obj
 * @returns {messages.PlayerDead}
 */
messages.PlayerDead.getRootAsPlayerDead = function(bb, obj) {
  return (obj || new messages.PlayerDead).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
messages.PlayerDead.prototype.playerId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.PlayerDead.startPlayerDead = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playerId
 */
messages.PlayerDead.addPlayerId = function(builder, playerId) {
  builder.addFieldInt32(0, playerId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.PlayerDead.endPlayerDead = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.Shake = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.Shake}
 */
messages.Shake.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.Shake=} obj
 * @returns {messages.Shake}
 */
messages.Shake.getRootAsShake = function(bb, obj) {
  return (obj || new messages.Shake).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
messages.Shake.prototype.spriteId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
messages.Shake.prototype.magnitude = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.Shake.startShake = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} spriteId
 */
messages.Shake.addSpriteId = function(builder, spriteId) {
  builder.addFieldInt32(0, spriteId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} magnitude
 */
messages.Shake.addMagnitude = function(builder, magnitude) {
  builder.addFieldInt32(1, magnitude, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.Shake.endShake = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
messages.Update = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {messages.Update}
 */
messages.Update.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {messages.Update=} obj
 * @returns {messages.Update}
 */
messages.Update.getRootAsUpdate = function(bb, obj) {
  return (obj || new messages.Update).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {messages.UpdateMessage}
 */
messages.Update.prototype.messageType = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {messages.UpdateMessage} */ (this.bb.readUint8(this.bb_pos + offset)) : messages.UpdateMessage.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
messages.Update.prototype.message = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
messages.Update.startUpdate = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {messages.UpdateMessage} messageType
 */
messages.Update.addMessageType = function(builder, messageType) {
  builder.addFieldInt8(0, messageType, messages.UpdateMessage.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} messageOffset
 */
messages.Update.addMessage = function(builder, messageOffset) {
  builder.addFieldOffset(1, messageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
messages.Update.endUpdate = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
messages.Update.finishUpdateBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.messages = messages;
